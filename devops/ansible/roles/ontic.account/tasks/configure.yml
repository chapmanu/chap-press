# Copyright (c) Ontic. (http://www.ontic.com.au). All rights reserved.
# See the COPYING file bundled with this package for license details.

---

- name: 'Account | Configure sudoers directory.'
  become: yes
  file:
    path: '/etc/sudoers.d'
    state: 'directory'
    group: 'root'
    owner: 'root'
    mode: '0755'

- name: 'Account | Configure sudoers directory is scanned.'
  become: yes
  lineinfile:
    regexp: '#includedir\s+/etc/sudoers.d'
    line: '#includedir /etc/sudoers.d'
    dest: '/etc/sudoers'
    group: 'root'
    owner: 'root'
    mode: '0644'
    create: yes

- name: 'Account | Configure groups.'
  become: yes
  group:
    name: '{{ item.name }}'
    gid: '{{ item.gid | default(omit) }}'
    state: '{{ item.state | default(omit) }}'
    system: '{{ item.system | default(omit) }}'
  with_items: '{{ account_groups }}'

- name: 'Account | Configure present sudo groups.'
  become: yes
  lineinfile:
    regexp: '^%{{ item.name }}\s*ALL\='
    line: '%{{ item.name }} ALL=(ALL:ALL) NOPASSWD:ALL'
    dest: '/etc/sudoers.d/group_{{ item.name }}'
    create: yes
    owner: 'root'
    group: 'root'
    mode: '0440'
    state: '{{ item.sudoer | ternary("present", "absent") }}'
    validate: 'visudo -cf %s'
  with_items: '{{ account_groups }}'
  when: 'item.sudoer is defined and item.sudoer'

- name: 'Account | Configure absent sudo groups.'
  become: yes
  file:
    path: '/etc/sudoers.d/group_{{ item.name }}'
    state: 'absent'
  with_items: '{{ account_groups }}'
  when: 'item.sudoer is not defined or not item.sudoer'

- name: 'Account | Configure users.'
  become: yes
  user:
    name: '{{ item.name }}'
    append: '{{ item.append | default(omit) }}'
    comment: '{{ item.comment | default(omit) }}'
    createhome: '{{ item.createhome | default(omit) }}'
    expires: '{{ item.expires | default(omit) }}'
    force: '{{ item.force | default(omit) }}'
    generate_ssh_key: '{{ item.generate_ssh_key | default(omit) }}'
    group: '{{ item.group | default(item.name) }}'
    groups: "{{ item.groups | join(',') if item.groups is defined else omit }}"
    home: '{{ item.home | default(omit) }}'
    login_class: '{{ item.login_class | default(omit) }}'
    move_home: '{{ item.move_home | default(omit) }}'
    non_unique: '{{ item.non_unique | default(omit) }}'
    password: '{{ item.password | default(omit) }}'
    remove: '{{ item.remove | default(omit) }}'
    seuser: '{{ item.seuser | default(omit) }}'
    shell: '{{ item.shell | default(omit) }}'
    skeleton: '{{ item.skeleton | default(omit) }}'
    ssh_key_bits: '{{ item.ssh_key_bits | default(omit) }}'
    ssh_key_comment: '{{ item.ssh_key_comment | default(omit) }}'
    ssh_key_file: '{{ item.ssh_key_file | default(omit) }}'
    ssh_key_passphrase: '{{ item.ssh_key_passphrase | default(omit) }}'
    ssh_key_type: '{{ item.ssh_key_type | default(omit) }}'
    state: '{{ item.state | default(omit) }}'
    system: '{{ item.system | default(omit) }}'
    uid: '{{ item.uid | default(omit) }}'
    update_password: '{{ item.update_password | default(omit) }}'
  with_items: '{{ account_users }}'

- name: 'Account | Configure present sudo users.'
  become: yes
  lineinfile:
    regexp: '^{{ item.name }}\s*ALL\='
    line: '{{ item.name }} ALL=(ALL:ALL) NOPASSWD:ALL'
    dest: '/etc/sudoers.d/user_{{ item.name }}'
    create: yes
    owner: 'root'
    group: 'root'
    mode: '0440'
    state: '{{ item.sudoer | ternary("present", "absent") }}'
    validate: 'visudo -cf %s'
  with_items: '{{ account_users }}'
  when: 'item.sudoer is defined and item.sudoer'

- name: 'Account | Configure absent sudo users.'
  become: yes
  file:
    path: '/etc/sudoers.d/user_{{ item.name }}'
    state: 'absent'
  with_items: '{{ account_users }}'
  when: 'item.sudoer is not defined or not item.sudoer'

- name: 'Account | Configure authorized keys.'
  become: yes
  authorized_key:
    user: '{{ item.0.name }}'
    exclusive: '{{ item.1.exclusive | default(omit) }}'
    key: '{{ item.1.key }}'
    key_options: '{{ item.1.key_options | default(omit) }}'
    manage_dir: '{{ item.1.manage_dir | default(omit) }}'
    path: '{{ item.1.path | default(omit) }}'
    state: '{{ item.1.state | default(omit) }}'
    validate_certs: '{{ item.1.validate_certs | default(omit) }}'
  with_subelements:
    - '{{ account_users }}'
    - 'authorized_keys'
    - flags:
      skip_missing: yes

- name: 'Account | Configure known hosts.'
  become: yes
  become_user: '{{ item.0.name }}'
  known_hosts:
    path: '/home/{{ item.0.name }}/.ssh/known_hosts'
    key: '{{ item.1.key | default(omit) }}'
    name: '{{ item.1.name }}'
    state: '{{ item.1.state | default(omit) }}'
  with_subelements:
    - '{{ account_users }}'
    - 'known_hosts'
    - flags:
      skip_missing: yes

- name: 'Account | Configure files.'
  become: yes
  file:
    follow: '{{ item.1.follow | default(omit) }}'
    force: '{{ item.1.force | default(omit) }}'
    group: '{{ item.1.group | default(item.0.group) }}'
    mode: '{{ item.1.mode | default(omit) }}'
    owner: '{{ item.1.owner | default(item.0.name) }}'
    path: '/home/{{ item.0.name }}/{{ item.1.path }}'
    recurse: '{{ item.1.recurse | default(omit) }}'
    selevel: '{{ item.1.selevel | default(omit) }}'
    serole: '{{ item.1.serole | default(omit) }}'
    setype: '{{ item.1.setype | default(omit) }}'
    seuser: '{{ item.1.seuser | default(omit) }}'
    src: '{{ item.1.src | default(omit) }}'
    state: '{{ item.1.state | default(omit) }}'
  with_subelements:
    - '{{ account_users }}'
    - 'files'
    - flags:
      skip_missing: yes

- name: 'Account | Configure copies.'
  become: yes
  copy:
    backup: '{{ item.1.backup | default(omit) }}'
    content: '{{ item.1.content | default(omit) }}'
    dest: '/home/{{ item.0.name }}/{{ item.1.dest }}'
    directory_mode: '{{ item.1.directory_mode | default(omit) }}'
    follow: '{{ item.1.follow | default(omit) }}'
    force: '{{ item.1.force | default(omit) }}'
    group: '{{ item.1.group | default(item.0.group) }}'
    mode: '{{ item.1.mode | default(omit) }}'
    owner: '{{ item.1.owner | default(item.0.name) }}'
    remote_src: '{{ item.1.remote_src | default(omit) }}'
    selevel: '{{ item.1.selevel | default(omit) }}'
    serole: '{{ item.1.serole | default(omit) }}'
    setype: '{{ item.1.setype | default(omit) }}'
    seuser: '{{ item.1.seuser | default(omit) }}'
    src: '{{ item.1.src | default(omit) }}'
    validate: '{{ item.1.validate | default(omit) }}'
  with_subelements:
    - '{{ account_users }}'
    - 'copies'
    - flags:
      skip_missing: yes

- name: 'Account | Configure repositories.'
  become: yes
  become_user: '{{ item.1.become_user | default(omit) }}'
  git:
    accept_hostkey: '{{ item.1.accept_hostkey | default(omit) }}'
    bare: '{{ item.1.bare | default(omit) }}'
    clone: '{{ item.1.clone | default(omit) }}'
    depth: '{{ item.1.depth | default(omit) }}'
    dest: '/home/{{ item.0.name }}/{{ item.1.dest }}'
    executable: '{{ item.1.executable | default(omit) }}'
    force: '{{ item.1.force | default(omit) }}'
    key_file: '{{ item.1.key_file | default(omit) }}'
    recursive: '{{ item.1.recursive | default(omit) }}'
    reference: '{{ item.1.reference | default(omit) }}'
    refspec: '{{ item.1.refspec | default(omit) }}'
    remote: '{{ item.1.remote | default(omit) }}'
    repo: '{{ item.1.repo }}'
    ssh_opts: '{{ item.1.ssh_opts | default(omit) }}'
    track_submodules: '{{ item.1.track_submodules | default(omit) }}'
    update: yes
    verify_commit: '{{ item.1.verify_commit | default(omit) }}'
    version: '{{ item.1.version | default(omit) }}'
  with_subelements:
    - '{{ account_users }}'
    - 'repositories'
    - flags:
      skip_missing: yes

- name: 'Account | Configure composer.'
  become: yes
  become_user: '{{ item.1.become_user | default(omit) }}'
  composer:
    arguments: '{{ item.1.arguments | default(omit) }}'
    command: '{{ item.1.command | default(omit) }}'
    ignore_platform_reqs: '{{ item.1.ignore_platform_reqs | default(omit) }}'
    no_dev: '{{ item.1.no_dev | default(omit) }}'
    no_plugins: '{{ item.1.no_plugins | default(omit) }}'
    no_scripts: '{{ item.1.no_scripts | default(omit) }}'
    optimize_autoloader: '{{ item.1.optimize_autoloader | default(omit) }}'
    prefer_dist: '{{ item.1.prefer_dist | default(omit) }}'
    prefer_source: '{{ item.1.prefer_source | default(omit) }}'
    working_dir: '/home/{{ item.0.name }}/{{ item.1.working_dir }}'
  with_subelements:
    - '{{ account_users }}'
    - 'composers'
    - flags:
      skip_missing: yes