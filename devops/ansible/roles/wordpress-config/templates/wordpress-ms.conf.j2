# WordPress multisite subdirectory rules.
# https://codex.wordpress.org/Nginx#WordPress_Multisite_Subdirectory_rules
index index.php;
location ~ ^(/[^/]+/)?files/(.+) {
    try_files /wp-content/blogs.dir/$blogid/files/$2 /wp-includes/ms-files.php?file=$2 ;
    access_log off;     log_not_found off; expires max;
}

#avoid php readfile()
location ^~ /blogs.dir {
    internal;
    alias /var/www/html/current/content/blogs.dir ;
    access_log off;     log_not_found off; expires max;
}

if (!-e $request_filename) {
    rewrite /wp-admin$ $scheme://$host$uri/ permanent;
    rewrite ^(/[^/]+)?(/wp-.*) $2 last;
    rewrite ^(/[^/]+)?(/.*\.php) $2 last;
}

location / {
    try_files $uri $uri/ /index.php?$args ;
}

# BEGIN Cache Ignore Rules
set $no_cache 0;

# Don't cache POST requests and urls with a query strings
if ($request_method = POST) {
        set $no_cache 1;
}
if ($query_string != "") {
        set $no_cache 1;
}

# Don't cache uris containing the following segments
if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
        set $no_cache 1;
}

# Don't use the cache for logged in users or recent commenters
if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
        set $no_cache 1;
}

if ($request_uri ~* "panther-alert") {
       set $no_cache 1;
}

# END Cache Ignore Rules

# Block trackbacks/pingbacks
location ^~ /wp-trackback.php {
deny all;
}

# Custom Error Pages
error_page 403 /error-pages/403.html;
error_page 404 /error-pages/404.html;
error_page 500 /error-pages/500.html;
error_page 502 /error-pages/502.html;
error_page 503 /error-pages/503.html;

location ^~ /error-pages {
        internal; # Prevent direct requests to error pages if enabled
        root /var/www/html/current/content;
}

# https://stackoverflow.com/questions/15423500/nginx-showing-blank-php-pages
location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        if (!-f $document_root$fastcgi_script_name) {
                return 404;
        }
    include       fastcgi_params;
    fastcgi_index index.php;
    fastcgi_pass  127.0.0.1:9000;
    fastcgi_param   SCRIPT_FILENAME
                    $document_root$fastcgi_script_name;
    # Bypass Cache
    fastcgi_cache_bypass $no_cache;

    #Do not Cache
    fastcgi_no_cache $no_cache;

    # Cache configuration
    fastcgi_cache WORDPRESS;
    fastcgi_cache_valid 200 24h;
    fastcgi_cache_valid 404 1m;
}
